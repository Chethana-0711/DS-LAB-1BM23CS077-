#include <stdio.h>
#include <stdlib.h>

#define MAX 10

void dfs(int graph[MAX][MAX], int visited[MAX], int vertex, int vertices) {
    visited[vertex] = 1;
    printf("%d ", vertex);
    
    for (int i = 0; i < vertices; i++) {
        if (graph[vertex][i] == 1 && !visited[i]) {
            dfs(graph, visited, i, vertices);
        }
    }
}

int isConnected(int graph[MAX][MAX], int vertices) {
    int visited[MAX] = {0};
    
    // Start DFS from vertex 0
    dfs(graph, visited, 0, vertices);
    
    // Check if all vertices were visited
    for (int i = 0; i < vertices; i++) {
        if (!visited[i]) {
            return 0;  // Graph is not connected
        }
    }
    return 1;  // Graph is connected
}

int main() {
    int vertices;
    int graph[MAX][MAX] = {0};
    printf("chethana.c(1bm23cs077)\n");
    printf("Enter the number of vertices: ");
    scanf("%d", &vertices);
    
    printf("Enter the adjacency matrix (0 for no edge, 1 for edge):\n");
    for (int i = 0; i < vertices; i++) {
        for (int j = 0; j < vertices; j++) {
            scanf("%d", &graph[i][j]);
        }
    }
    
    if (isConnected(graph, vertices)) {
        printf("The graph is connected.\n");
    } else {
        printf("The graph is not connected.\n");
    }
    
    return 0;
}

