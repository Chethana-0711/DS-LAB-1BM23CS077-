#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

void addNode(struct Node** head, int data) {
    struct Node* newNode = createNode(data);
    if (*head == NULL) {
        *head = newNode;
        return;
    }
    struct Node* temp = *head;
    while (temp->next != NULL) {
        temp = temp->next;
    }
    temp->next = newNode;
}

void deleteFirst(struct Node** head) {
    if (*head == NULL) {
        printf("List is empty.\n");
        return;
    }
    struct Node* temp = *head;
    *head = (*head)->next;
    free(temp);
    printf("First element deleted.\n");
}

void deleteLast(struct Node** head) {
    if (*head == NULL) {
        printf("List is empty.\n");
        return;
    }
    if ((*head)->next == NULL) {
        free(*head);
        *head = NULL;
        printf("Last element deleted.\n");
        return;
    }
    struct Node* temp = *head;
    while (temp->next && temp->next->next != NULL) {
        temp = temp->next;
    }
    free(temp->next);
    temp->next = NULL;
    printf("Last element deleted.\n");
}

void deleteSpecific(struct Node** head, int value) {
    if (*head == NULL) {
        printf("List is empty.\n");
        return;
    }
    struct Node* temp = *head;
    if (temp->data == value) {
        *head = temp->next;
        free(temp);
        printf("Element %d deleted.\n", value);
        return;
    }
    while (temp->next && temp->next->data != value) {
        temp = temp->next;
    }
    if (temp->next) {
        struct Node* toDelete = temp->next;
        temp->next = temp->next->next;
        free(toDelete);
        printf("Element %d deleted.\n", value);
    } else {
        printf("Element %d not found in the list.\n", value);
    }
}

void display(struct Node* head) {
    if (head == NULL) {
        printf("List is empty.\n");
        return;
    }
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

int main() {
    struct Node* head = NULL;
    int choice, value;
printf("Chethana.C(1BM23CS077)\n");
    while (1) {
        printf("\nMenu:\n");
        printf("1. Add a node\n");
        printf("2. Delete first element\n");
        printf("3. Delete last element\n");
        printf("4. Delete a specific element\n");
        printf("5. Display list\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        if (choice == 1) {
            printf("Enter the value to add: ");
            scanf("%d", &value);
            addNode(&head, value);
        }
        else if (choice == 2) {
            deleteFirst(&head);
        }
        else if (choice == 3) {
            deleteLast(&head);
        }
        else if (choice == 4) {
            printf("Enter the value to delete: ");
            scanf("%d", &value);
            deleteSpecific(&head, value);
        }
        else if (choice == 5) {
            display(head);
        }
        else if (choice == 6) {
            printf("Exiting...\n");
            return 0;
        }
        else {
            printf("Invalid choice. Try again.\n");
        }
    }

    return 0;
}

